name: Release and Publish

on:
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Get current version
      - name: Get current version
        id: ver
        run: |
          cur=$(cat src/veedb/VERSION 2>/dev/null || echo "0.0.0")
          echo "current=$cur" >> "$GITHUB_OUTPUT"

      # Bump patch version
      - name: Bump patch version
        id: bump
        run: |
          IFS='.' read -r MAJ MIN PAT <<< "${{ steps.ver.outputs.current }}"
          PAT=$((PAT + 1))
          NEW="$MAJ.$MIN.$PAT"
          echo "$NEW" > src/veedb/VERSION
          echo "new=$NEW" >> "$GITHUB_OUTPUT"

      # Commit and tag
      - name: Commit and tag
        env: 
          NEW_VERSION: ${{ steps.bump.outputs.new }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add src/veedb/VERSION
          git commit -m "chore: bump version to v$NEW_VERSION [skip ci]" || true
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin HEAD
          git push origin "v$NEW_VERSION"

      # Build package
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new }}
          name: Release v${{ steps.bump.outputs.new }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
